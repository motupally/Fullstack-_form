{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranitha\\\\fullstack_form\\\\src\\\\NewEmployee.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [employees, setEmployees] = useState([{\n  empId: 1234,\n  name: \"John\",\n  designation: \"SE\"\n}, {\n  empId: 4567,\n  name: \"Tom\",\n  designation: \"SSE\"\n}, {\n  empId: 8910,\n  name: \"Kevin\",\n  designation: \"TA\"\n}]);\nconst addEmployee = () => {\n  setEmployees([...employees, {\n    empId: 6789,\n    name: \"Clara\",\n    designation: \"TL\"\n  }]);\n};\nfunction NewEmployee(_ref) {\n  let {\n    employees,\n    addEmployee\n  } = _ref;\n  let person = {\n    empId: 4321,\n    name: \"Smith\",\n    designation: \"TL\"\n  };\n  const add = () => {\n    addEmployee(person);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Featured Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: employees.map(emp => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [emp.name, \"'s designation is \", emp.designation, \" and has employee Id \", emp.empId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 23\n            }, this)]\n          }, emp.empId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: add,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = NewEmployee;\nexport default NewEmployee;\nvar _c;\n$RefreshReg$(_c, \"NewEmployee\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","employees","setEmployees","useState","empId","name","designation","addEmployee","NewEmployee","_ref","person","add","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","emp","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Pranitha/fullstack_form/src/NewEmployee.js"],"sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst [employees, setEmployees] = useState([\r\n       { empId: 1234, name: \"John\", designation:\"SE\" },\r\n       { empId: 4567, name: \"Tom\", designation:\"SSE\" },\r\n       { empId: 8910, name: \"Kevin\", designation:\"TA\" },\r\n      ]);\r\n      const addEmployee = () => {\r\n        setEmployees([\r\n          ...employees,\r\n          { empId: 6789, name: \"Clara\", designation: \"TL\" },\r\n        ]);\r\n      };\r\nfunction NewEmployee({employees, addEmployee}){\r\n    let person = { empId: 4321, name: \"Smith\", designation: \"TL\" };  \r\n    const add = () => {\r\n      addEmployee(person);\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"container mt-5\">\r\n        <h2>Featured Cards</h2>\r\n        <div className=\"row\">\r\n          {employees.map(emp => {\r\n            return (\r\n              <div className=\"col-md-4\" key={emp.empId}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{emp.name}</h5>\r\n                    <p className=\"card-text\">\r\n                      {emp.name}'s designation is {emp.designation} and has employee Id {emp.empId}\r\n                    </p>\r\n                  </div>\r\n                </div><br/>\r\n              </div>\r\n            )\r\n          })}          \r\n        </div><br/>\r\n        <button className=\"btn btn-primary\" onClick={add}>Add Employee</button>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\nexport default NewEmployee;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}