{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranitha\\\\fullstack_form\\\\src\\\\FormComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormComponent() {\n  _s();\n  const [Id, setId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let res = fetch(\"http://localhost:9090/addcourses\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      Id: Id,\n      title: title,\n      description: description\n    })\n  });\n  let handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:9090/addcourses\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          Id: Id,\n          title: title,\n          description: description\n        })\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setId(\"\");\n        setTitle(\"\");\n        setdescription(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Id,\n        placeholder: \"ID\",\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        placeholder: \"Title\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        placeholder: \"Description\",\n        onChange: e => setdescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(FormComponent, \"ppzUKcUS92hB52Zq/w6wEYW2zUQ=\");\n_c = FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormComponent","_s","Id","setId","title","setTitle","description","setdescription","message","setMessage","res","fetch","method","body","JSON","stringify","handleSubmit","e","preventDefault","resJson","json","status","err","console","log","className","children","onSubmit","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pranitha/fullstack_form/src/FormComponent.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nfunction FormComponent(){\r\n    const [Id, setId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const[message, setMessage]=useState(\"\");\r\n    let res = fetch(\"http://localhost:9090/addcourses\", {\r\n  method: \"POST\",\r\n  body: JSON.stringify({\r\n    Id: Id,\r\n    title: title,\r\n    description: description,\r\n  }),\r\n});\r\nlet handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let res = await fetch(\"http://localhost:9090/addcourses\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            Id: Id,\r\n            title: title,\r\n            description: description,\r\n        }),\r\n      });\r\n      let resJson= await res.json();\r\n      if (res.status === 200) {\r\n        setId(\"\");\r\n        setTitle(\"\");\r\n        setdescription(\"\");\r\n        setMessage(\"User created successfully\");\r\n      } else {\r\n        setMessage(\"Some error occured\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={Id}\r\n          placeholder=\"ID\"\r\n          onChange={(e) => setId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          placeholder=\"Title\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={description}\r\n          placeholder=\"Description\"\r\n          onChange={(e) => setdescription(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">Create</button>\r\n\r\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAK,CAACW,OAAO,EAAEC,UAAU,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EACvC,IAAIa,GAAG,GAAGC,KAAK,CAAC,kCAAkC,EAAE;IACtDC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBb,EAAE,EAAEA,EAAE;MACNE,KAAK,EAAEA,KAAK;MACZE,WAAW,EAAEA;IACf,CAAC;EACH,CAAC,CAAC;EACF,IAAIU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAIR,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBb,EAAE,EAAEA,EAAE;UACNE,KAAK,EAAEA,KAAK;UACZE,WAAW,EAAEA;QACjB,CAAC;MACH,CAAC,CAAC;MACF,IAAIa,OAAO,GAAE,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;MAC7B,IAAIV,GAAG,CAACW,MAAM,KAAK,GAAG,EAAE;QACtBlB,KAAK,CAAC,EAAE,CAAC;QACTE,QAAQ,CAAC,EAAE,CAAC;QACZE,cAAc,CAAC,EAAE,CAAC;QAClBE,UAAU,CAAC,2BAA2B,CAAC;MACzC,CAAC,MAAM;QACLA,UAAU,CAAC,oBAAoB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACD,oBACEvB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB3B,OAAA;MAAM4B,QAAQ,EAAEX,YAAa;MAAAU,QAAA,gBAC3B3B,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3B,EAAG;QACV4B,WAAW,EAAC,IAAI;QAChBC,QAAQ,EAAGd,CAAC,IAAKd,KAAK,CAACc,CAAC,CAACe,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFrC,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,KAAM;QACb0B,WAAW,EAAC,OAAO;QACnBC,QAAQ,EAAGd,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACe,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFrC,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEvB,WAAY;QACnBwB,WAAW,EAAC,aAAa;QACzBC,QAAQ,EAAGd,CAAC,IAAKV,cAAc,CAACU,CAAC,CAACe,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAEFrC,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAErCrC,OAAA;QAAK0B,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAElB,OAAO,gBAAGT,OAAA;UAAA2B,QAAA,EAAIlB;QAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAG;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnC,EAAA,CAjEQD,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}